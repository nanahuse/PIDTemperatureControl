#include "ThreadBase.h"
SimpleTimerThread::SimpleTimerThread()
{
	SetInterval(0);
	Stop();
}

bool SimpleTimerThread::Tick()
{
	if ( millis() >= IntervalTimer )
	{
		UpdateIntervalTimer();
		return true;
	}
	return false;
}
void SimpleTimerThread::Start()
{
	IntervalTimer = millis() + Interval;
}
void SimpleTimerThread::Start(unsigned long intervalTimer) //??????????Start()??????????Start()??????????(Â´???`)
{
	IntervalTimer = intervalTimer;
	UpdateIntervalTimer();
}
void SimpleTimerThread::Stop()
{
	IntervalTimer = UnsignedLongMax;//????????????????????????????????????????50?????
}
void SimpleTimerThread::SetInterval(unsigned long interval)
{
	if ( interval = 0 )
	{
		Interval = 1; //????????
	}
	else
	{
		Interval = interval;
	}
}
bool SimpleTimerThread::isRunning() //??????????????????????
{
	return IntervalTimer != UnsignedLongMax; //SetTimerStop???????????????????????????????
}

void SimpleTimerThread::UpdateIntervalTimer() //?????????????????????????????????
{
	unsigned long NowTime = millis();
	while ( IntervalTimer <= NowTime )
	{
		IntervalTimer += Interval;
	}
}
const unsigned long SimpleTimerThread::UnsignedLongMax = 4294967295; //unsigned long????
